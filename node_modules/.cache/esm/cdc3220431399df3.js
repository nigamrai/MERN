let express,courseController,upload,authorizedRoles,isLoggedIn;_313‍.x([["default",()=>_313‍.o]]);_313‍.w("express",[["default",["express"],function(v){express=v}]]);_313‍.w("../controllers/course.controller",[["default",["courseController"],function(v){courseController=v}]]);_313‍.w("../middlewares/multer.middleware",[["default",["upload"],function(v){upload=v}]]);_313‍.w("../middlewares/auth.middleware",[["authorizedRoles",["authorizedRoles"],function(v){authorizedRoles=v}],["isLoggedIn",["isLoggedIn"],function(v){isLoggedIn=v}]]);




const router=express.Router();
router.route('/')
    .post(isLoggedIn,upload.single('thumbnail'),courseController.createCourse)
    .get(courseController.getAllCourses)
    .delete(isLoggedIn,courseController.removeLectureFromCourse)
router.route('/:id')
        .get(isLoggedIn,courseController.getLecturesByCourseId)
        .put(isLoggedIn,courseController.updateCourse)
        .delete(isLoggedIn,courseController.deleteCourse)
        .post(isLoggedIn,upload.single('lecture'),courseController.addLectureToCourseById);
_313‍.d(router);  